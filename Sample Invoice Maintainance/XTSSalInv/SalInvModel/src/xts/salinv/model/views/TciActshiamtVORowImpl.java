package xts.salinv.model.views;

import java.math.BigDecimal;

import java.sql.Timestamp;

import java.sql.Types;

import oracle.adf.share.ADFContext;

import oracle.jbo.JboException;
import oracle.jbo.RowSet;
import oracle.jbo.RowSetIterator;

import xts.common.model.framework.GenericEntityImpl;
import xts.common.model.framework.GenericViewRowImpl;
import xts.common.model.framework.beans.DisabledLogicContainerModel;

import xts.common.model.framework.db.PLSQLCall;

import xts.salinv.model.services.XTSSalInvAMImpl;
// ---------------------------------------------------------------------
// ---    File generated by Oracle ADF Business Components Design Time.
// ---    Wed Sep 07 16:15:11 CST 2016
// ---    Custom code may be added to this class.
// ---    Warning: Do not modify method signatures of generated methods.
// ---------------------------------------------------------------------
public class TciActshiamtVORowImpl extends GenericViewRowImpl {


    public static final int ENTITY_TCIACTSHIAMT = 0;

    @Override
    public Boolean calculateDisabled(String attrName) {
        boolean disabled = super.calculateDisabled(attrName);

        if (!disabled) {
            if (ADFContext.getCurrent().isJEE()) {
                DisabledLogicContainerModel disabledControlModel = (DisabledLogicContainerModel) ADFContext.getCurrent()
                                                                                                           .getPageFlowScope()
                                                                                                           .get("XTSDisabledLogicContainerBean");

                XTSSalInvAMImpl am = (XTSSalInvAMImpl) this.getApplicationModule();
                TciMstVORowImpl mstRow = (TciMstVORowImpl) am.getTciMstVO().getCurrentRow();
                if (mstRow != null) {
                    String divcod = mstRow.getCimsDivcod();
                    Long runnum = mstRow.getCimsRunnum();
                    String key = "TCI_MST:" + divcod + "|" + runnum.toString();
                    //By SI Status
                    String sts = (String) disabledControlModel.getData(key, "CimsStscod");
                    switch (sts) {
                    case "AC":
                        return true;
                    default:
                        break;
                    }
                }
            }
        }

        return super.calculateDisabled(attrName);
    }

    /**
     * AttributesEnum: generated enum for identifying attributes and accessors. DO NOT MODIFY.
     */
    protected enum AttributesEnum {
        CisaDivcod,
        CisaRunnum,
        CisaSoRunnum,
        CisaShiseq,
        CisaItmseq,
        CisaFnlcus,
        CisaAddseq,
        CisaChrtyp,
        CisaDes,
        CisaRat,
        CisaItmamt,
        CisaAmt,
        CisaInvshw,
        Crtdat,
        Crtby,
        Upddat,
        Updby,
        CisaAmtTotal,
        TacChrtypmstLovVO1;
        private static AttributesEnum[] vals = null; ;
        private static final int firstIndex = 0;

        protected int index() {
            return AttributesEnum.firstIndex() + ordinal();
        }

        protected static final int firstIndex() {
            return firstIndex;
        }

        protected static int count() {
            return AttributesEnum.firstIndex() + AttributesEnum.staticValues().length;
        }

        protected static final AttributesEnum[] staticValues() {
            if (vals == null) {
                vals = AttributesEnum.values();
            }
            return vals;
        }
    }


    public static final int CISADIVCOD = AttributesEnum.CisaDivcod.index();
    public static final int CISARUNNUM = AttributesEnum.CisaRunnum.index();
    public static final int CISASORUNNUM = AttributesEnum.CisaSoRunnum.index();
    public static final int CISASHISEQ = AttributesEnum.CisaShiseq.index();
    public static final int CISAITMSEQ = AttributesEnum.CisaItmseq.index();
    public static final int CISAFNLCUS = AttributesEnum.CisaFnlcus.index();
    public static final int CISAADDSEQ = AttributesEnum.CisaAddseq.index();
    public static final int CISACHRTYP = AttributesEnum.CisaChrtyp.index();
    public static final int CISADES = AttributesEnum.CisaDes.index();
    public static final int CISARAT = AttributesEnum.CisaRat.index();
    public static final int CISAITMAMT = AttributesEnum.CisaItmamt.index();
    public static final int CISAAMT = AttributesEnum.CisaAmt.index();
    public static final int CISAINVSHW = AttributesEnum.CisaInvshw.index();
    public static final int CRTDAT = AttributesEnum.Crtdat.index();
    public static final int CRTBY = AttributesEnum.Crtby.index();
    public static final int UPDDAT = AttributesEnum.Upddat.index();
    public static final int UPDBY = AttributesEnum.Updby.index();
    public static final int CISAAMTTOTAL = AttributesEnum.CisaAmtTotal.index();
    public static final int TACCHRTYPMSTLOVVO1 = AttributesEnum.TacChrtypmstLovVO1.index();

    /**
     * This is the default constructor (do not remove).
     */
    public TciActshiamtVORowImpl() {
    }

    /**
     * Gets TciActshiamt entity object.
     * @return the TciActshiamt
     */
    public GenericEntityImpl getTciActshiamt() {
        return (GenericEntityImpl) getEntity(ENTITY_TCIACTSHIAMT);
    }

    /**
     * Gets the attribute value for CISA_DIVCOD using the alias name CisaDivcod.
     * @return the CISA_DIVCOD
     */
    public String getCisaDivcod() {
        return (String) getAttributeInternal(CISADIVCOD);
    }

    /**
     * Sets <code>value</code> as attribute value for CISA_DIVCOD using the alias name CisaDivcod.
     * @param value value to set the CISA_DIVCOD
     */
    public void setCisaDivcod(String value) {
        setAttributeInternal(CISADIVCOD, value);
    }

    /**
     * Gets the attribute value for CISA_RUNNUM using the alias name CisaRunnum.
     * @return the CISA_RUNNUM
     */
    public Long getCisaRunnum() {
        return (Long) getAttributeInternal(CISARUNNUM);
    }

    /**
     * Sets <code>value</code> as attribute value for CISA_RUNNUM using the alias name CisaRunnum.
     * @param value value to set the CISA_RUNNUM
     */
    public void setCisaRunnum(Long value) {
        setAttributeInternal(CISARUNNUM, value);
    }

    /**
     * Gets the attribute value for CISA_SO_RUNNUM using the alias name CisaSoRunnum.
     * @return the CISA_SO_RUNNUM
     */
    public Long getCisaSoRunnum() {
        return (Long) getAttributeInternal(CISASORUNNUM);
    }

    /**
     * Sets <code>value</code> as attribute value for CISA_SO_RUNNUM using the alias name CisaSoRunnum.
     * @param value value to set the CISA_SO_RUNNUM
     */
    public void setCisaSoRunnum(Long value) {
        setAttributeInternal(CISASORUNNUM, value);
    }

    /**
     * Gets the attribute value for CISA_SHISEQ using the alias name CisaShiseq.
     * @return the CISA_SHISEQ
     */
    public Integer getCisaShiseq() {
        return (Integer) getAttributeInternal(CISASHISEQ);
    }

    /**
     * Sets <code>value</code> as attribute value for CISA_SHISEQ using the alias name CisaShiseq.
     * @param value value to set the CISA_SHISEQ
     */
    public void setCisaShiseq(Integer value) {
        setAttributeInternal(CISASHISEQ, value);
    }

    /**
     * Gets the attribute value for CISA_ITMSEQ using the alias name CisaItmseq.
     * @return the CISA_ITMSEQ
     */
    public Integer getCisaItmseq() {
        return (Integer) getAttributeInternal(CISAITMSEQ);
    }

    /**
     * Sets <code>value</code> as attribute value for CISA_ITMSEQ using the alias name CisaItmseq.
     * @param value value to set the CISA_ITMSEQ
     */
    public void setCisaItmseq(Integer value) {
        setAttributeInternal(CISAITMSEQ, value);
    }

    /**
     * Gets the attribute value for CISA_FNLCUS using the alias name CisaFnlcus.
     * @return the CISA_FNLCUS
     */
    public String getCisaFnlcus() {
        return (String) getAttributeInternal(CISAFNLCUS);
    }

    /**
     * Sets <code>value</code> as attribute value for CISA_FNLCUS using the alias name CisaFnlcus.
     * @param value value to set the CISA_FNLCUS
     */
    public void setCisaFnlcus(String value) {
        setAttributeInternal(CISAFNLCUS, value);
    }

    /**
     * Gets the attribute value for CISA_ADDSEQ using the alias name CisaAddseq.
     * @return the CISA_ADDSEQ
     */
    public Integer getCisaAddseq() {
        return (Integer) getAttributeInternal(CISAADDSEQ);
    }

    /**
     * Sets <code>value</code> as attribute value for CISA_ADDSEQ using the alias name CisaAddseq.
     * @param value value to set the CISA_ADDSEQ
     */
    public void setCisaAddseq(Integer value) {
        setAttributeInternal(CISAADDSEQ, value);
    }

    /**
     * Gets the attribute value for CISA_CHRTYP using the alias name CisaChrtyp.
     * @return the CISA_CHRTYP
     */
    public String getCisaChrtyp() {
        return (String) getAttributeInternal(CISACHRTYP);
    }

    /**
     * Sets <code>value</code> as attribute value for CISA_CHRTYP using the alias name CisaChrtyp.
     * @param value value to set the CISA_CHRTYP
     */
    public void setCisaChrtyp(String value) {
        setAttributeInternal(CISACHRTYP, value);
    }

    /**
     * Gets the attribute value for CISA_DES using the alias name CisaDes.
     * @return the CISA_DES
     */
    public String getCisaDes() {
        return (String) getAttributeInternal(CISADES);
    }

    /**
     * Sets <code>value</code> as attribute value for CISA_DES using the alias name CisaDes.
     * @param value value to set the CISA_DES
     */
    public void setCisaDes(String value) {
        setAttributeInternal(CISADES, value);
    }

    /**
     * Gets the attribute value for CISA_RAT using the alias name CisaRat.
     * @return the CISA_RAT
     */
    public BigDecimal getCisaRat() {
        return (BigDecimal) getAttributeInternal(CISARAT);
    }

    /**
     * Sets <code>value</code> as attribute value for CISA_RAT using the alias name CisaRat.
     * @param value value to set the CISA_RAT
     */
    public void setCisaRat(BigDecimal value) {
        setAttributeInternal(CISARAT, value);

        if (this.getCisaRat() != null && this.getCisaRat().compareTo(BigDecimal.ZERO) != 0) {
            if (this.getCisaItmamt() == null || this.getCisaItmamt().compareTo(BigDecimal.ZERO) == 0) {
                XTSSalInvAMImpl am = (XTSSalInvAMImpl) this.getApplicationModule();
                TciActshpitmVORowImpl shpitmRow = (TciActshpitmVORowImpl) am.getTciActshpitmVO().getCurrentRow();
                if (shpitmRow != null) {

                    try {
                        PLSQLCall dc = new PLSQLCall("? := DP_SI.F_GET_CISA_AMT", this.getDBTransaction());
                        dc.addRet("ret", Types.DOUBLE);
                        dc.addIn(this.getCisaRat());
                        dc.addIn(this.getCisaItmamt());
                        dc.addIn(shpitmRow.getCiaiItmprc());
                        dc.addIn(shpitmRow.getCiaiActqty());
                        dc.execute();
                        Object ret = dc.getObj("ret");
                        this.setCisaAmt(BigDecimal.valueOf((Double) ret));

                    } catch (JboException e) {
                        ((GenericEntityImpl) this.getEntityForAttribute("CisaRunnum")).convertException(e);
                    }

                }
            }
        }
    }

    /**
     * Gets the attribute value for CISA_ITMAMT using the alias name CisaItmamt.
     * @return the CISA_ITMAMT
     */
    public BigDecimal getCisaItmamt() {
        return (BigDecimal) getAttributeInternal(CISAITMAMT);
    }

    /**
     * Sets <code>value</code> as attribute value for CISA_ITMAMT using the alias name CisaItmamt.
     * @param value value to set the CISA_ITMAMT
     */
    public void setCisaItmamt(BigDecimal value) {
        setAttributeInternal(CISAITMAMT, value);

        if (this.getCisaItmamt() != null && this.getCisaItmamt().compareTo(BigDecimal.ZERO) != 0) {
            if (this.getCisaRat() == null || this.getCisaRat().compareTo(BigDecimal.ZERO) == 0) {

                XTSSalInvAMImpl am = (XTSSalInvAMImpl) this.getApplicationModule();
                TciActshpitmVORowImpl shpitmRow = (TciActshpitmVORowImpl) am.getTciActshpitmVO().getCurrentRow();
                if (shpitmRow != null) {
                    try {
                        PLSQLCall dc = new PLSQLCall("? := DP_SI.F_ITMAMT_GET_AMT", this.getDBTransaction());
                        dc.addRet("ret", Types.DOUBLE);
                        dc.addIn(this.getCisaRat());
                        dc.addIn(this.getCisaItmamt());
                        dc.addIn(shpitmRow.getCiaiActqty());
                        dc.execute();
                        Object ret = dc.getObj("ret");
                        if (ret != null)
                            this.setCisaAmt(BigDecimal.valueOf((Double) ret));

                    } catch (JboException e) {
                        ((GenericEntityImpl) this.getEntityForAttribute("CisaRunnum")).convertException(e);
                    }
                }
            }
        }
    }

    /**
     * Gets the attribute value for CISA_AMT using the alias name CisaAmt.
     * @return the CISA_AMT
     */
    public BigDecimal getCisaAmt() {
        return (BigDecimal) getAttributeInternal(CISAAMT);
    }

    /**
     * Sets <code>value</code> as attribute value for CISA_AMT using the alias name CisaAmt.
     * @param value value to set the CISA_AMT
     */
    public void setCisaAmt(BigDecimal value) {
        setAttributeInternal(CISAAMT, value);
    }

    /**
     * Gets the attribute value for CISA_INVSHW using the alias name CisaInvshw.
     * @return the CISA_INVSHW
     */
    public String getCisaInvshw() {
        return (String) getAttributeInternal(CISAINVSHW);
    }

    /**
     * Sets <code>value</code> as attribute value for CISA_INVSHW using the alias name CisaInvshw.
     * @param value value to set the CISA_INVSHW
     */
    public void setCisaInvshw(String value) {
        setAttributeInternal(CISAINVSHW, value);
    }

    /**
     * Gets the attribute value for CRTDAT using the alias name Crtdat.
     * @return the CRTDAT
     */
    public Timestamp getCrtdat() {
        return (Timestamp) getAttributeInternal(CRTDAT);
    }

    /**
     * Sets <code>value</code> as attribute value for CRTDAT using the alias name Crtdat.
     * @param value value to set the CRTDAT
     */
    public void setCrtdat(Timestamp value) {
        setAttributeInternal(CRTDAT, value);
    }

    /**
     * Gets the attribute value for CRTBY using the alias name Crtby.
     * @return the CRTBY
     */
    public String getCrtby() {
        return (String) getAttributeInternal(CRTBY);
    }

    /**
     * Sets <code>value</code> as attribute value for CRTBY using the alias name Crtby.
     * @param value value to set the CRTBY
     */
    public void setCrtby(String value) {
        setAttributeInternal(CRTBY, value);
    }

    /**
     * Gets the attribute value for UPDDAT using the alias name Upddat.
     * @return the UPDDAT
     */
    public Timestamp getUpddat() {
        return (Timestamp) getAttributeInternal(UPDDAT);
    }

    /**
     * Sets <code>value</code> as attribute value for UPDDAT using the alias name Upddat.
     * @param value value to set the UPDDAT
     */
    public void setUpddat(Timestamp value) {
        setAttributeInternal(UPDDAT, value);
    }

    /**
     * Gets the attribute value for UPDBY using the alias name Updby.
     * @return the UPDBY
     */
    public String getUpdby() {
        return (String) getAttributeInternal(UPDBY);
    }

    /**
     * Sets <code>value</code> as attribute value for UPDBY using the alias name Updby.
     * @param value value to set the UPDBY
     */
    public void setUpdby(String value) {
        setAttributeInternal(UPDBY, value);
    }

    /**
     * Gets the attribute value for the calculated attribute CisaAmtTotal.
     * @return the CisaAmtTotal
     */
    public BigDecimal getCisaAmtTotal() {
        RowSetIterator rsi = this.getViewObject().createRowSetIterator(null);
        BigDecimal rowVal = new BigDecimal(0);
        BigDecimal total = new BigDecimal(0);

        while (rsi.hasNext()) {
            TciActshiamtVORowImpl row = (TciActshiamtVORowImpl) rsi.next();
            rowVal = row.getCisaAmt();
            if (rowVal == null) {
                rowVal = BigDecimal.ZERO;
            }
            total = total.add(rowVal);
        }
        rsi.reset();
        rsi.closeRowSetIterator();

        return total;
    }

    /**
     * Gets the view accessor <code>RowSet</code> TacChrtypmstLovVO1.
     */
    public RowSet getTacChrtypmstLovVO1() {
        return (RowSet) getAttributeInternal(TACCHRTYPMSTLOVVO1);
    }
}

