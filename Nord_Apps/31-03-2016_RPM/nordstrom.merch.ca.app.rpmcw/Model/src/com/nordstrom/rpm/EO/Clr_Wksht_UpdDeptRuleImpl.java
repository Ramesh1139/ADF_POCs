package com.nordstrom.rpm.EO;

import oracle.jbo.AttributeList;
import oracle.jbo.Key;
import oracle.jbo.domain.Number;
import oracle.jbo.server.AttributeDefImpl;
import oracle.jbo.server.EntityDefImpl;
import oracle.jbo.server.EntityImpl;
import oracle.jbo.server.SequenceImpl;
// ---------------------------------------------------------------------
// ---    File generated by Oracle ADF Business Components Design Time.
// ---    Wed Nov 04 16:16:42 IST 2015
// ---    Custom code may be added to this class.
// ---    Warning: Do not modify method signatures of generated methods.
// ---------------------------------------------------------------------
public class Clr_Wksht_UpdDeptRuleImpl extends EntityImpl {
    private static EntityDefImpl mDefinitionObject;

    /**
     * AttributesEnum: generated enum for identifying attributes and accessors. DO NOT MODIFY.
     */
    public enum AttributesEnum {
        Id {
            public Object get(Clr_Wksht_UpdDeptRuleImpl obj) {
                return obj.getId();
            }

            public void put(Clr_Wksht_UpdDeptRuleImpl obj, Object value) {
                obj.setId((Number)value);
            }
        }
        ,
        RuleId {
            public Object get(Clr_Wksht_UpdDeptRuleImpl obj) {
                return obj.getRuleId();
            }

            public void put(Clr_Wksht_UpdDeptRuleImpl obj, Object value) {
                obj.setRuleId((Number)value);
            }
        }
        ,
        Dept {
            public Object get(Clr_Wksht_UpdDeptRuleImpl obj) {
                return obj.getDept();
            }

            public void put(Clr_Wksht_UpdDeptRuleImpl obj, Object value) {
                obj.setDept((String)value);
            }
        }
        ;
        private static AttributesEnum[] vals = null;
        private static final int firstIndex = 0;

        public abstract Object get(Clr_Wksht_UpdDeptRuleImpl object);

        public abstract void put(Clr_Wksht_UpdDeptRuleImpl object,
                                 Object value);

        public int index() {
            return AttributesEnum.firstIndex() + ordinal();
        }

        public static final int firstIndex() {
            return firstIndex;
        }

        public static int count() {
            return AttributesEnum.firstIndex() + AttributesEnum.staticValues().length;
        }

        public static final AttributesEnum[] staticValues() {
            if (vals == null) {
                vals = AttributesEnum.values();
            }
            return vals;
        }
    }
    public static final int ID = AttributesEnum.Id.index();
    public static final int RULEID = AttributesEnum.RuleId.index();
    public static final int DEPT = AttributesEnum.Dept.index();

    /**
     * This is the default constructor (do not remove).
     */
    public Clr_Wksht_UpdDeptRuleImpl() {
    }

    /**
     * Gets the attribute value for Id, using the alias name Id.
     * @return the Id
     */
    public Number getId() {
        return (Number)getAttributeInternal(ID);
    }

    /**
     * Sets <code>value</code> as the attribute value for Id.
     * @param value value to set the Id
     */
    public void setId(Number value) {
        setAttributeInternal(ID, value);
    }

    /**
     * Gets the attribute value for RuleId, using the alias name RuleId.
     * @return the RuleId
     */
    public Number getRuleId() {
        return (Number)getAttributeInternal(RULEID);
    }

    /**
     * Sets <code>value</code> as the attribute value for RuleId.
     * @param value value to set the RuleId
     */
    public void setRuleId(Number value) {
        setAttributeInternal(RULEID, value);
    }

    /**
     * Gets the attribute value for Dept, using the alias name Dept.
     * @return the Dept
     */
    public String getDept() {
        return (String)getAttributeInternal(DEPT);
    }

    /**
     * Sets <code>value</code> as the attribute value for Dept.
     * @param value value to set the Dept
     */
    public void setDept(String value) {
        setAttributeInternal(DEPT, value);
    }

    /**
     * getAttrInvokeAccessor: generated method. Do not modify.
     * @param index the index identifying the attribute
     * @param attrDef the attribute

     * @return the attribute value
     * @throws Exception
     */
    protected Object getAttrInvokeAccessor(int index,
                                           AttributeDefImpl attrDef) throws Exception {
        if ((index >= AttributesEnum.firstIndex()) && (index < AttributesEnum.count())) {
            return AttributesEnum.staticValues()[index - AttributesEnum.firstIndex()].get(this);
        }
        return super.getAttrInvokeAccessor(index, attrDef);
    }

    /**
     * setAttrInvokeAccessor: generated method. Do not modify.
     * @param index the index identifying the attribute
     * @param value the value to assign to the attribute
     * @param attrDef the attribute

     * @throws Exception
     */
    protected void setAttrInvokeAccessor(int index, Object value,
                                         AttributeDefImpl attrDef) throws Exception {
        if ((index >= AttributesEnum.firstIndex()) && (index < AttributesEnum.count())) {
            AttributesEnum.staticValues()[index - AttributesEnum.firstIndex()].put(this, value);
            return;
        }
        super.setAttrInvokeAccessor(index, value, attrDef);
    }

    /**
     * @param id key constituent

     * @return a Key object based on given key constituents.
     */
    public static Key createPrimaryKey(Number id) {
        return new Key(new Object[]{id});
    }

    /**
     * @return the definition object for this instance class.
     */
    public static synchronized EntityDefImpl getDefinitionObject() {
        if (mDefinitionObject == null) {
            mDefinitionObject = EntityDefImpl.findDefObject("com.nordstrom.rpm.EO.Clr_Wksht_UpdDeptRule");
        }
        return mDefinitionObject;
    }

    /**
     * Add attribute defaulting logic in this method.
     * @param attributeList list of attribute names/values to initialize the row
     */
    protected void create(AttributeList attributeList) {
        super.create(attributeList);
    }
    public Number getSeq(String seq_str) 
      {
            Number seq=new Number(0);
            
            if(seq_str!=null && !seq_str.equals("")) 
            {
               SequenceImpl simpl=new SequenceImpl(seq_str,getDBTransaction());
                seq=simpl.getSequenceNumber();
            }                        
            return seq;
        }
}
