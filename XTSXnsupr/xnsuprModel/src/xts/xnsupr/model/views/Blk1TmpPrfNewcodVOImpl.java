package xts.xnsupr.model.views;

import java.sql.ResultSet;

import oracle.jbo.Row;
import oracle.jbo.server.QueryCollection;
import oracle.jbo.server.ViewRowImpl;

import oracle.jbo.server.ViewRowSetImpl;

import xts.common.model.framework.GenericViewObjectImpl;

import xts.xnsupr.model.services.xnsuprAMImpl;


// ---------------------------------------------------------------------
// ---    File generated by Oracle ADF Business Components Design Time.
// ---    Thu Apr 13 15:16:58 IST 2017
// ---    Custom code may be added to this class.
// ---    Warning: Do not modify method signatures of generated methods.
// ---------------------------------------------------------------------
public class Blk1TmpPrfNewcodVOImpl extends GenericViewObjectImpl {
    /**
     * This is the default constructor (do not remove).
     */
    public Blk1TmpPrfNewcodVOImpl() {
    }
    
    public xnsuprAMImpl getAM(){
        return (xnsuprAMImpl) getApplicationModule();
    }

    @Override
    protected void executeQueryForCollection(Object object, Object[] object2, int i) 
    
    {
        // TODO Implement this method
        getAM().getBlk1TmpPrfNewcodVOEvents().prq();
        
        super.executeQueryForCollection(object, object2, i);
        System.out.println(this.getQuery());
    }


    @Override
    public ViewRowImpl createInstanceFromResultSet(QueryCollection queryCollection, ResultSet resultSet)
    {
        // TODO Implement this method
     //   return super.createInstanceFromResultSet(queryCollection, resultSet);
    
     Blk1TmpPrfNewcodVORowImpl r = (Blk1TmpPrfNewcodVORowImpl)super.createInstanceFromResultSet(queryCollection, resultSet);
     try
     {
         getAM().getBlk1TmpPrfNewcodVOEvents().poq(r);
     }
     catch(Exception e)
     {
         e.printStackTrace();
     }
     
     return r;
    }


    @Override
    protected boolean hasNextForCollection(Object qc) {
        boolean bRet = super.hasNextForCollection(qc);
        return bRet;
    }

    @Override
    public long getQueryHitCount(ViewRowSetImpl viewRowSet) {
        long value = super.getQueryHitCount(viewRowSet);
        return value;
    }

    @Override
    public long getCappedQueryHitCount(ViewRowSetImpl viewRowSet, Row[] masterRows, long oldCap, long cap) {
        long value = super.getCappedQueryHitCount(viewRowSet, masterRows, oldCap, cap);
        return value;
    }


    @Override
    protected ViewRowImpl createRowFromResultSet(Object qc, ResultSet resultSet) {
        ViewRowImpl value = super.createRowFromResultSet(qc, resultSet);
        return value;
    }
}

