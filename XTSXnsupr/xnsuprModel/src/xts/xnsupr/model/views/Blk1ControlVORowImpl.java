package xts.xnsupr.model.views;

import java.math.BigDecimal;

import java.util.HashMap;

import oracle.jbo.server.ViewAttributeDefImpl;

import xts.formadf.model.framework.GenericProgrammaticViewRowImpl;
// ---------------------------------------------------------------------
// ---    File generated by Oracle ADF Business Components Design Time.
// ---    Tue Apr 18 16:31:38 IST 2017
// ---    Custom code may be added to this class.
// ---    Warning: Do not modify method signatures of generated methods.
// ---------------------------------------------------------------------
public class Blk1ControlVORowImpl extends GenericProgrammaticViewRowImpl {
    /**
     * createRowData - for custom java data source support.
     * Overridden to initialize the dataProvier for newly created row.
     * Used for updateable View Objects.
     */
    public Object createRowData(HashMap attrNameValueMap) {
        Object value = super.createRowData(attrNameValueMap);
        return value;
    }

    /**
     * convertToSourceType - for custom java data source support.
     * Overridden to provide custom implementation for conversions of a value
     * from attribute java type to datasource column/field type.
     * Not required in most cases.
     */
    public Object convertToSourceType(ViewAttributeDefImpl attrDef, String sourceType, Object val) {
        Object value = super.convertToSourceType(attrDef, sourceType, val);
        return value;
    }

    /**
     * convertToAttributeType - for custom java data source support.
     * Overridden to provide custom implementation for conversions of a value
     *  from datasource/column field type to attribute java type.
     * Not required in most cases.
     */
    public Object convertToAttributeType(ViewAttributeDefImpl attrDef, Class javaTypeClass, Object val) {
        Object value = super.convertToAttributeType(attrDef, javaTypeClass, val);
        return value;
    }

    /**
     * AttributesEnum: generated enum for identifying attributes and accessors. DO NOT MODIFY.
     */
    protected enum AttributesEnum {
        Key1,
        Blk1Insert,
        Blk1Delete,
        Blk1Resubmit,
        Blk1Refresh,
        Blk1Find,
        Blk1Exit;
        private static AttributesEnum[] vals = null;
        private static final int firstIndex = 0;

        protected int index() {
            return AttributesEnum.firstIndex() + ordinal();
        }

        protected static final int firstIndex() {
            return firstIndex;
        }

        protected static int count() {
            return AttributesEnum.firstIndex() + AttributesEnum.staticValues().length;
        }

        protected static final AttributesEnum[] staticValues() {
            if (vals == null) {
                vals = AttributesEnum.values();
            }
            return vals;
        }
    }


    public static final int KEY1 = AttributesEnum.Key1.index();
    public static final int BLK1INSERT = AttributesEnum.Blk1Insert.index();
    public static final int BLK1DELETE = AttributesEnum.Blk1Delete.index();
    public static final int BLK1RESUBMIT = AttributesEnum.Blk1Resubmit.index();
    public static final int BLK1REFRESH = AttributesEnum.Blk1Refresh.index();
    public static final int BLK1FIND = AttributesEnum.Blk1Find.index();
    public static final int BLK1EXIT = AttributesEnum.Blk1Exit.index();

    /**
     * This is the default constructor (do not remove).
     */
    public Blk1ControlVORowImpl() {
    }
    
    // Start : Generated Code

    public void setBlk1Delete_noVal(String value){
       setAttributeInternal(BLK1DELETE, value);
    }

    public void setBlk1Insert_noVal(String value){
       setAttributeInternal(BLK1INSERT, value);
    }

    public void setBlk1Exit_noVal(String value){
       setAttributeInternal(BLK1EXIT, value);
    }

    public void setBlk1Find_noVal(String value){
       setAttributeInternal(BLK1FIND, value);
    }

    public void setBlk1Refresh_noVal(String value){
       setAttributeInternal(BLK1REFRESH, value);
    }

    public void setBlk1Resubmit_noVal(String value){
       setAttributeInternal(BLK1RESUBMIT, value);
    }
    
    // End : Generated Code
}

