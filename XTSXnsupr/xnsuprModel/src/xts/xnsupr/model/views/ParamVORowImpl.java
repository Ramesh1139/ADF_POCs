package xts.xnsupr.model.views;

import java.math.BigDecimal;

import java.util.HashMap;

import oracle.jbo.server.ViewAttributeDefImpl;

import xts.formadf.model.framework.GenericProgrammaticViewRowImpl;
// ---------------------------------------------------------------------
// ---    File generated by Oracle ADF Business Components Design Time.
// ---    Wed Apr 19 15:34:57 IST 2017
// ---    Custom code may be added to this class.
// ---    Warning: Do not modify method signatures of generated methods.
// ---------------------------------------------------------------------
public class ParamVORowImpl extends GenericProgrammaticViewRowImpl {
    /**
     * createRowData - for custom java data source support.
     * Overridden to initialize the dataProvier for newly created row.
     * Used for updateable View Objects.
     */
    public Object createRowData(HashMap attrNameValueMap) {
        Object value = super.createRowData(attrNameValueMap);
        return value;
    }

    /**
     * convertToSourceType - for custom java data source support.
     * Overridden to provide custom implementation for conversions of a value
     * from attribute java type to datasource column/field type.
     * Not required in most cases.
     */
    public Object convertToSourceType(ViewAttributeDefImpl attrDef, String sourceType, Object val) {
        Object value = super.convertToSourceType(attrDef, sourceType, val);
        return value;
    }

    /**
     * convertToAttributeType - for custom java data source support.
     * Overridden to provide custom implementation for conversions of a value
     *  from datasource/column field type to attribute java type.
     * Not required in most cases.
     */
    public Object convertToAttributeType(ViewAttributeDefImpl attrDef, Class javaTypeClass, Object val) {
        Object value = super.convertToAttributeType(attrDef, javaTypeClass, val);
        return value;
    }

    /**
     * AttributesEnum: generated enum for identifying attributes and accessors. DO NOT MODIFY.
     */
    protected enum AttributesEnum {
        Key1,
        PProfile,
        PMode,
        PCommonGlobalFromAdfMenu,
        PFormGlobalFromAdfMenu;
        private static AttributesEnum[] vals = null;
        private static final int firstIndex = 0;

        protected int index() {
            return AttributesEnum.firstIndex() + ordinal();
        }

        protected static final int firstIndex() {
            return firstIndex;
        }

        protected static int count() {
            return AttributesEnum.firstIndex() + AttributesEnum.staticValues().length;
        }

        protected static final AttributesEnum[] staticValues() {
            if (vals == null) {
                vals = AttributesEnum.values();
            }
            return vals;
        }
    }

    public static final int KEY1 = AttributesEnum.Key1.index();
    public static final int PPROFILE = AttributesEnum.PProfile.index();
    public static final int PMODE = AttributesEnum.PMode.index();
    public static final int PCOMMONGLOBALFROMADFMENU = AttributesEnum.PCommonGlobalFromAdfMenu.index();
    public static final int PFORMGLOBALFROMADFMENU = AttributesEnum.PFormGlobalFromAdfMenu.index();

    /**
     * This is the default constructor (do not remove).
     */
    public ParamVORowImpl() {
    }

    /**
     * Gets the attribute value for the calculated attribute Key1.
     * @return the Key1
     */
    public BigDecimal getKey1() {
        return (BigDecimal) getAttributeInternal(KEY1);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute Key1.
     * @param value value to set the  Key1
     */
    public void setKey1(BigDecimal value) {
        setAttributeInternal(KEY1, value);
    }

    /**
     * Gets the attribute value for the calculated attribute PProfile.
     * @return the PProfile
     */
    public String getPProfile() {
        return (String) getAttributeInternal(PPROFILE);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute PProfile.
     * @param value value to set the  PProfile
     */
    public void setPProfile(String value) {
        setAttributeInternal(PPROFILE, value);
    }

    /**
     * Gets the attribute value for the calculated attribute PMode.
     * @return the PMode
     */
    public String getPMode() {
        return (String) getAttributeInternal(PMODE);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute PMode.
     * @param value value to set the  PMode
     */
    public void setPMode(String value) {
        setAttributeInternal(PMODE, value);
    }

    /**
     * Gets the attribute value for the calculated attribute PCommonGlobalFromAdfMenu.
     * @return the PCommonGlobalFromAdfMenu
     */
    public String getPCommonGlobalFromAdfMenu() {
        return (String) getAttributeInternal(PCOMMONGLOBALFROMADFMENU);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute PCommonGlobalFromAdfMenu.
     * @param value value to set the  PCommonGlobalFromAdfMenu
     */
    public void setPCommonGlobalFromAdfMenu(String value) {
        setAttributeInternal(PCOMMONGLOBALFROMADFMENU, value);
    }

    /**
     * Gets the attribute value for the calculated attribute PFormGlobalFromAdfMenu.
     * @return the PFormGlobalFromAdfMenu
     */
    public String getPFormGlobalFromAdfMenu() {
        return (String) getAttributeInternal(PFORMGLOBALFROMADFMENU);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute PFormGlobalFromAdfMenu.
     * @param value value to set the  PFormGlobalFromAdfMenu
     */
    public void setPFormGlobalFromAdfMenu(String value) {
        setAttributeInternal(PFORMGLOBALFROMADFMENU, value);
    }

    // Start : Generated Code
    
    
    // End : Generated Code
}

