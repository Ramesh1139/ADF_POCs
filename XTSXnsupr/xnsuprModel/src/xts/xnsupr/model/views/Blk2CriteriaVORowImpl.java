package xts.xnsupr.model.views;

import java.math.BigDecimal;
import java.sql.Date;

import java.util.HashMap;

import oracle.jbo.RowSet;

import oracle.jbo.server.ViewAttributeDefImpl;

import xts.formadf.model.framework.GenericProgrammaticViewRowImpl;

// ---------------------------------------------------------------------
// ---    File generated by Oracle ADF Business Components Design Time.
// ---    Tue Apr 18 16:37:14 IST 2017
// ---    Custom code may be added to this class.
// ---    Warning: Do not modify method signatures of generated methods.
// ---------------------------------------------------------------------
public class Blk2CriteriaVORowImpl extends GenericProgrammaticViewRowImpl {
    /**
     * createRowData - for custom java data source support.
     * Overridden to initialize the dataProvier for newly created row.
     * Used for updateable View Objects.
     */
    public Object createRowData(HashMap attrNameValueMap) {
        Object value = super.createRowData(attrNameValueMap);
        return value;
    }

    /**
     * convertToSourceType - for custom java data source support.
     * Overridden to provide custom implementation for conversions of a value
     * from attribute java type to datasource column/field type.
     * Not required in most cases.
     */
    public Object convertToSourceType(ViewAttributeDefImpl attrDef, String sourceType, Object val) {
        Object value = super.convertToSourceType(attrDef, sourceType, val);
        return value;
    }

    /**
     * convertToAttributeType - for custom java data source support.
     * Overridden to provide custom implementation for conversions of a value
     *  from datasource/column field type to attribute java type.
     * Not required in most cases.
     */
    public Object convertToAttributeType(ViewAttributeDefImpl attrDef, Class javaTypeClass, Object val) {
        Object value = super.convertToAttributeType(attrDef, javaTypeClass, val);
        return value;
    }

    /**
     * AttributesEnum: generated enum for identifying attributes and accessors. DO NOT MODIFY.
     */
    protected enum AttributesEnum {
        Key1,
        MppfcId,
        MppfcFulnam,
        MppfcStscod,
        MppfcSbmby,
        LovApvby,
        MppfcApvby,
        LovSbmby,
        Ok,
        Reset,
        Cancel,
        SubmitedDateFrom,
        SubmitedDateTo,
        UpdatedDateFrom,
        UpdatedDateTo,
        ConfirmDateFrom,
        ConfirmDateTo,
        StatusLovVO1;
        private static AttributesEnum[] vals = null;
        private static final int firstIndex = 0;

        protected int index() {
            return AttributesEnum.firstIndex() + ordinal();
        }

        protected static final int firstIndex() {
            return firstIndex;
        }

        protected static int count() {
            return AttributesEnum.firstIndex() + AttributesEnum.staticValues().length;
        }

        protected static final AttributesEnum[] staticValues() {
            if (vals == null) {
                vals = AttributesEnum.values();
            }
            return vals;
        }
    }


    public static final int KEY1 = AttributesEnum.Key1.index();
    public static final int MPPFCID = AttributesEnum.MppfcId.index();
    public static final int MPPFCFULNAM = AttributesEnum.MppfcFulnam.index();
    public static final int MPPFCSTSCOD = AttributesEnum.MppfcStscod.index();
    public static final int MPPFCSBMBY = AttributesEnum.MppfcSbmby.index();
    public static final int LOVAPVBY = AttributesEnum.LovApvby.index();
    public static final int MPPFCAPVBY = AttributesEnum.MppfcApvby.index();
    public static final int LOVSBMBY = AttributesEnum.LovSbmby.index();
    public static final int OK = AttributesEnum.Ok.index();
    public static final int RESET = AttributesEnum.Reset.index();
    public static final int CANCEL = AttributesEnum.Cancel.index();
    public static final int SUBMITEDDATEFROM = AttributesEnum.SubmitedDateFrom.index();
    public static final int SUBMITEDDATETO = AttributesEnum.SubmitedDateTo.index();
    public static final int UPDATEDDATEFROM = AttributesEnum.UpdatedDateFrom.index();
    public static final int UPDATEDDATETO = AttributesEnum.UpdatedDateTo.index();
    public static final int CONFIRMDATEFROM = AttributesEnum.ConfirmDateFrom.index();
    public static final int CONFIRMDATETO = AttributesEnum.ConfirmDateTo.index();
    public static final int STATUSLOVVO1 = AttributesEnum.StatusLovVO1.index();

    /**
     * This is the default constructor (do not remove).
     */
    public Blk2CriteriaVORowImpl() {
    }
    
    
    // Start : Generated Code


    /**
     * Gets the attribute value for the calculated attribute Key1.
     * @return the Key1
     */
    public BigDecimal getKey1() {
        return (BigDecimal) getAttributeInternal(KEY1);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute Key1.
     * @param value value to set the  Key1
     */
    public void setKey1(BigDecimal value) {
        setAttributeInternal(KEY1, value);
    }

    /**
     * Gets the attribute value for the calculated attribute MppfcId.
     * @return the MppfcId
     */
    public String getMppfcId() {
        return (String) getAttributeInternal(MPPFCID);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute MppfcId.
     * @param value value to set the  MppfcId
     */
    public void setMppfcId(String value) {
        setAttributeInternal(MPPFCID, value);
    }

    /**
     * Gets the attribute value for the calculated attribute MppfcFulnam.
     * @return the MppfcFulnam
     */
    public String getMppfcFulnam() {
        return (String) getAttributeInternal(MPPFCFULNAM);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute MppfcFulnam.
     * @param value value to set the  MppfcFulnam
     */
    public void setMppfcFulnam(String value) {
        setAttributeInternal(MPPFCFULNAM, value);
    }

    /**
     * Gets the attribute value for the calculated attribute MppfcStscod.
     * @return the MppfcStscod
     */
    public String getMppfcStscod() {
        return (String) getAttributeInternal(MPPFCSTSCOD);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute MppfcStscod.
     * @param value value to set the  MppfcStscod
     */
    public void setMppfcStscod(String value) {
        setAttributeInternal(MPPFCSTSCOD, value);
    }

    /**
     * Gets the attribute value for the calculated attribute MppfcSbmby.
     * @return the MppfcSbmby
     */
    public String getMppfcSbmby() {
        return (String) getAttributeInternal(MPPFCSBMBY);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute MppfcSbmby.
     * @param value value to set the  MppfcSbmby
     */
    public void setMppfcSbmby(String value) {
        setAttributeInternal(MPPFCSBMBY, value);
    }

    /**
     * Gets the attribute value for the calculated attribute LovApvby.
     * @return the LovApvby
     */
    public String getLovApvby() {
        return (String) getAttributeInternal(LOVAPVBY);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute LovApvby.
     * @param value value to set the  LovApvby
     */
    public void setLovApvby(String value) {
        setAttributeInternal(LOVAPVBY, value);
    }

    /**
     * Gets the attribute value for the calculated attribute MppfcApvby.
     * @return the MppfcApvby
     */
    public String getMppfcApvby() {
        return (String) getAttributeInternal(MPPFCAPVBY);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute MppfcApvby.
     * @param value value to set the  MppfcApvby
     */
    public void setMppfcApvby(String value) {
        setAttributeInternal(MPPFCAPVBY, value);
    }

    /**
     * Gets the attribute value for the calculated attribute LovSbmby.
     * @return the LovSbmby
     */
    public String getLovSbmby() {
        return (String) getAttributeInternal(LOVSBMBY);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute LovSbmby.
     * @param value value to set the  LovSbmby
     */
    public void setLovSbmby(String value) {
        setAttributeInternal(LOVSBMBY, value);
    }

    /**
     * Gets the attribute value for the calculated attribute Ok.
     * @return the Ok
     */
    public String getOk() {
        return (String) getAttributeInternal(OK);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute Ok.
     * @param value value to set the  Ok
     */
    public void setOk(String value) {
        setAttributeInternal(OK, value);
    }

    /**
     * Gets the attribute value for the calculated attribute Reset.
     * @return the Reset
     */
    public String getReset() {
        return (String) getAttributeInternal(RESET);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute Reset.
     * @param value value to set the  Reset
     */
    public void setReset(String value) {
        setAttributeInternal(RESET, value);
    }

    /**
     * Gets the attribute value for the calculated attribute Cancel.
     * @return the Cancel
     */
    public String getCancel() {
        return (String) getAttributeInternal(CANCEL);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute Cancel.
     * @param value value to set the  Cancel
     */
    public void setCancel(String value) {
        setAttributeInternal(CANCEL, value);
    }

    /**
     * Gets the attribute value for the calculated attribute SubmitedDateFrom.
     * @return the SubmitedDateFrom
     */
    public Date getSubmitedDateFrom() {
        return (Date) getAttributeInternal(SUBMITEDDATEFROM);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute SubmitedDateFrom.
     * @param value value to set the  SubmitedDateFrom
     */
    public void setSubmitedDateFrom(Date value) {
        setAttributeInternal(SUBMITEDDATEFROM, value);
    }

    /**
     * Gets the attribute value for the calculated attribute SubmitedDateTo.
     * @return the SubmitedDateTo
     */
    public Date getSubmitedDateTo() {
        return (Date) getAttributeInternal(SUBMITEDDATETO);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute SubmitedDateTo.
     * @param value value to set the  SubmitedDateTo
     */
    public void setSubmitedDateTo(Date value) {
        setAttributeInternal(SUBMITEDDATETO, value);
    }

    /**
     * Gets the attribute value for the calculated attribute UpdatedDateFrom.
     * @return the UpdatedDateFrom
     */
    public Date getUpdatedDateFrom() {
        return (Date) getAttributeInternal(UPDATEDDATEFROM);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute UpdatedDateFrom.
     * @param value value to set the  UpdatedDateFrom
     */
    public void setUpdatedDateFrom(Date value) {
        setAttributeInternal(UPDATEDDATEFROM, value);
    }

    /**
     * Gets the attribute value for the calculated attribute UpdatedDateTo.
     * @return the UpdatedDateTo
     */
    public Date getUpdatedDateTo() {
        return (Date) getAttributeInternal(UPDATEDDATETO);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute UpdatedDateTo.
     * @param value value to set the  UpdatedDateTo
     */
    public void setUpdatedDateTo(Date value) {
        setAttributeInternal(UPDATEDDATETO, value);
    }

    /**
     * Gets the attribute value for the calculated attribute ConfirmDateFrom.
     * @return the ConfirmDateFrom
     */
    public Date getConfirmDateFrom() {
        return (Date) getAttributeInternal(CONFIRMDATEFROM);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute ConfirmDateFrom.
     * @param value value to set the  ConfirmDateFrom
     */
    public void setConfirmDateFrom(Date value) {
        setAttributeInternal(CONFIRMDATEFROM, value);
    }

    /**
     * Gets the attribute value for the calculated attribute ConfirmDateTo.
     * @return the ConfirmDateTo
     */
    public Date getConfirmDateTo() {
        return (Date) getAttributeInternal(CONFIRMDATETO);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute ConfirmDateTo.
     * @param value value to set the  ConfirmDateTo
     */
    public void setConfirmDateTo(Date value) {
        setAttributeInternal(CONFIRMDATETO, value);
    }

    /**
     * Gets the view accessor <code>RowSet</code> StatusLovVO1.
     */
    public RowSet getStatusLovVO1() {
        return (RowSet) getAttributeInternal(STATUSLOVVO1);
    }

    public void setMppfcStscod_noVal(String value){
    setAttributeInternal(MPPFCSTSCOD, value);
    }

    public void setMppfcFulnam_noVal(String value){
    setAttributeInternal(MPPFCFULNAM, value);
    }

    public void setMppfcId_noVal(String value){
    setAttributeInternal(MPPFCID, value);
    }

    public void setLovSbmby_noVal(String value){
    setAttributeInternal(LOVSBMBY, value);
    }

    public void setMppfcApvby_noVal(String value){
    setAttributeInternal(MPPFCAPVBY, value);
    }

    public void setLovApvby_noVal(String value){
    setAttributeInternal(LOVAPVBY, value);
    }

    public void setMppfcSbmby_noVal(String value){
    setAttributeInternal(MPPFCSBMBY, value);
    }

    public void setOk_noVal(String value){
    setAttributeInternal(OK, value);
    }

    public void setReset_noVal(String value){
    setAttributeInternal(RESET, value);
    }

    public void setCancel_noVal(String value){
    setAttributeInternal(CANCEL, value);
    }
    

    // End : Generated Code
}

